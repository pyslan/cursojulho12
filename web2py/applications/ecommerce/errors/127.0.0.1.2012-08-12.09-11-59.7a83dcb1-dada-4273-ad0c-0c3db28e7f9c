(dp1
S'output'
p2
S"<type 'exceptions.RuntimeError'> Using a recursive select but encountered a broken reference: category 0"
p3
sS'layer'
p4
S'c:\\Users\\rochacbruno\\jul12\\cursojulho12\\web2py\\applications\\ecommerce\\controllers/product.py'
p5
sS'code'
p6
S'# coding: utf-8\n\ndef show():\n    # pegar produto no banco de dados\n    # buscar pelo slug\n    # acessar api do twitter\n    pass\n\n\ndef search():\n    # receber parametros e efetuar busca\n    pass\n\n# @auth.requires_login()\ndef list():\n    # exibir todos os produtos\n    # apenas para admin\n\n    # DEFINITION OF FIELDS AND VIRTUAL FIELDS\n    db.product.tax_price = Field.Virtual(lambda row: row.product.unit_price * origins.get(row.product.origin, 1))\n    db.product.edit = Field.Virtual(lambda row: A("Edit", _href=URL(\'edit\', args=row.product.id)))\n    query = db.product.id > 2\n    rows = db(query).select()\n    headers = ["Name", "Unit Price", "Tax", "Edit"]\n    fields = [\'name\', \'unit_price\', \'tax_price\', "edit"]\n\n    #  HARD WAY\n    table = TABLE()\n\n    thead = THEAD(TR())\n    for header in headers:\n        thead[0].append(TD(B(header)))\n    table.append(thead)\n\n    for row in rows:\n        tr = TR()\n        for field in fields:\n            tr.append(row[field])\n        table.append(tr)\n    table["_class"] = "table table-striped table-bordered table-condensed"\n\n    # table.append(TR(TD(*[A(p, _href=URL(), _class="btn") for p in xrange(pages)], _colspan=4)))\n\n    # # EASY WAY\n    # table = TABLE(THEAD(TR(*[B(header) for header in headers])),\n    #           TBODY(*[TR(*[TD(row[field]) for field in fields]) for row in rows]))\n    # table["_class"] = "table table-striped table-bordered table-condensed"\n\n    # MAGIC WAY\n    db.product.category.represent = lambda value, row: value.name\n    tax_price = lambda row: row.unit_price * origins.get(row.origin, 1)\n    links = [dict(header=\'Tax\', body=tax_price)]\n    table = SQLFORM.grid(query,\n                         user_signature=False,\n                         links=links\n                         )\n\n    return dict(table=table)\n\n\ndef edit():\n    # pegar produto pelo id ou slug\n    # criar formulario de edicao\n    # apenas para admin\n    pass\n    \n    # pid = request.args(0)\n    # form = SQLFORM(db.product, pid, formstyle="divs")\n    # button = form.elements(\'input[type=submit]\')[0]\n    # button["_value"] = "banana"\n    # if form.process().accepted:\n    #     redirect(URL(\'list\'))\n    # return form\n\n\ndef new():\n    # form para add novo produto\n    # apenas para admin\n    pass\n\n\n\n\n# def grid(query,\n#          fields=None,\n#          field_id=None,\n#          left=None,\n#          headers={},\n#          orderby=None,\n#          groupby=None,\n#          searchable=True,\n#          sortable=True,\n#          paginate=20,\n#          deletable=True,\n#          editable=True,\n#          details=True,\n#          selectable=None,\n#          create=True,\n#          csv=True,\n#          links=None,\n#          links_in_grid=True,\n#          upload = \'<default>\',\n#          args=[],\n#          user_signature = True,\n#          maxtextlengths={},\n#          maxtextlength=20,\n#          onvalidation=None,\n#          oncreate=None,\n#          onupdate=None,\n#          ondelete=None,\n#          sorter_icons=(XML(\'&#x2191;\'),XML(\'&#x2193;\')),\n#          ui = \'web2py\',\n#          showbuttontext=True,\n#          _class="web2py_grid",\n#          formname=\'web2py_grid\',\n#          search_widget=\'default\',\n#          ignore_rw = False,\n#          formstyle = \'table3cols\',\n#          exportclasses = None,\n#          formargs={},\n#          createargs={},\n#          editargs={},\n#          viewargs={},\n#         ):\nresponse._vars=response._caller(list)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "c:\\Users\\rochacbruno\\jul12\\cursojulho12\\web2py\\gluon\\restricted.py", line 205, in restricted\n    exec ccode in environment\n  File "c:\\Users\\rochacbruno\\jul12\\cursojulho12\\web2py\\applications\\ecommerce\\controllers/product.py", line 125, in <module>\n  File "c:\\Users\\rochacbruno\\jul12\\cursojulho12\\web2py\\gluon\\globals.py", line 182, in <lambda>\n    self._caller = lambda f: f()\n  File "c:\\Users\\rochacbruno\\jul12\\cursojulho12\\web2py\\applications\\ecommerce\\controllers/product.py", line 55, in list\n    links=links\n  File "c:\\Users\\rochacbruno\\jul12\\cursojulho12\\web2py\\gluon\\sqlhtml.py", line 2000, in grid\n    value=field.represent(value,row)\n  File "c:\\Users\\rochacbruno\\jul12\\cursojulho12\\web2py\\applications\\ecommerce\\controllers/product.py", line 50, in <lambda>\n    db.product.category.represent = lambda value, row: value.name\n  File "c:\\Users\\rochacbruno\\jul12\\cursojulho12\\web2py\\gluon\\dal.py", line 7138, in __getattr__\n    self.__allocate()\n  File "c:\\Users\\rochacbruno\\jul12\\cursojulho12\\web2py\\gluon\\dal.py", line 7133, in __allocate\n    raise RuntimeError, "Using a recursive select but encountered a broken reference: %s %d"%(self._table, int(self))\nRuntimeError: Using a recursive select but encountered a broken reference: category 0\n'
p11
s.