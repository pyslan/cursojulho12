(dp1
S'output'
p2
S"<type 'exceptions.KeyError'> 'products'"
p3
sS'layer'
p4
S'c:\\Users\\rochacbruno\\jul12\\cursojulho12\\web2py\\applications\\ecommerce\\models\\validators.py'
p5
sS'code'
p6
S'#coding: utf-8\n\n# validadores para tabelas\n\ndb.product.description.requires = \\\n   IS_NOT_EMPTY(error_message="Insira uma description")\ndb.product.barcode.requires = \\\n   IS_NOT_EMPTY(error_message="Insira um barcode")\n\ndb.products.origin.requires = IS_IN_SET([1,2,3])\n\n# computations\n# form widgets\n# visibility\n# campos virtuais\n# funcoes de validators\n# validadores customizados'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "c:\\Users\\rochacbruno\\jul12\\cursojulho12\\web2py\\gluon\\restricted.py", line 205, in restricted\n    exec ccode in environment\n  File "c:\\Users\\rochacbruno\\jul12\\cursojulho12\\web2py\\applications\\ecommerce\\models\\validators.py", line 10, in <module>\n    db.products.origin.requires = IS_IN_SET([1,2,3])\n  File "c:\\Users\\rochacbruno\\jul12\\cursojulho12\\web2py\\gluon\\dal.py", line 6997, in __getattr__\n    return self[key]\n  File "c:\\Users\\rochacbruno\\jul12\\cursojulho12\\web2py\\gluon\\dal.py", line 6991, in __getitem__\n    return dict.__getitem__(self, str(key))\nKeyError: \'products\'\n'
p11
s.